package models

import (
	"context"
	"testing"

	"github.com/TudorHulban/bCRM/pkg/commons"
	"github.com/go-pg/pg/v9"
	"github.com/labstack/echo/v4"
	"github.com/labstack/gommon/log"
	"github.com/stretchr/testify/assert"
)

func Test_User_Insert(t *testing.T) {
	dbConn := pg.Connect(&pg.Options{
		Addr:     commons.DBSocket,
		User:     commons.DBUser,
		Password: commons.DBPass,
		Database: commons.DBName,
	})
	defer dbConn.Close()

	e := echo.New()
	e.Logger.SetLevel(log.DEBUG)
	ectx := e.NewContext(nil, nil)

	f := UserFormData{TeamID: 1, LoginCODE: "xxx3", SecurityGroup: 1, LoginPWD: "abcd"}
	user, errNew := NewUser(ectx, f, false)
	if assert.NoError(t, errNew) {
		ctx := context.TODO()
		assert.NoError(t, user.Insert(ctx, commons.CTXTimeOutSecs))
	}
}

func Test_User_SelectByID(t *testing.T) {
	dbConn := pg.Connect(&pg.Options{
		Addr:     commons.DBSocket,
		User:     commons.DBUser,
		Password: commons.DBPass,
		Database: commons.DBName,
	})
	defer dbConn.Close()

	e := echo.New()
	e.Logger.SetLevel(log.DEBUG)
	ectx := e.NewContext(nil, nil)

	f := UserFormData{}
	user, errNew := NewUser(ectx, f, true)
	assert.NoError(t, errNew)

	ctx := context.TODO()
	u, err := user.GetbyID(ctx, commons.CTXTimeOutSecs, 1)
	assert.NoError(t, err)
	ectx.Logger().Debugf("user ID:%v", u.ID)
}
